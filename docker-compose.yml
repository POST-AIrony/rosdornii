version: "3"
services:
  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    container_name: backend
    depends_on:
      postgres:
        condition: service_healthy
      ch_server:
        condition: service_healthy
    command: >
      bash -c "alembic upgrade head && poetry run uvicorn app:app --host 0.0.0.0 --port 8000"

  postgres:
    build:
      context: .docker/postgres
      dockerfile: Dockerfile
    container_name: postgres
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    env_file:
      - .docker/.env
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: rosdornii-web
      dockerfile: Dockerfile
    container_name: frontend
    command: >
      bash -c "npm run build"
    volumes:
      - frontend_volume:/app/dist

  nginx:
    build:
      dockerfile: Dockerfile
      context: .docker/nginx/
    container_name: nginx
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - frontend_volume:/usr/share/nginx/html
    env_file:
      - .docker/.env
    depends_on:
      - backend
      - frontend
    ports:
      - "80:80"
      - "443:443"
      - "8000:8000"

  ch_server:
    image: yandex/clickhouse-server
    ports:
      - '8123:8123'
      - '9000:9000'
    volumes:
      - ./clickhouse/db:/var/lib/clickhouse
    networks:
      - ch_ntw

  ch_client:
    image: yandex/clickhouse-client:latest
    entrypoint:
      - /bin/sleep
    depends_on:
      - ch_server
    links:
      - ch_server
    command: 
      - infinity
    networks:
      - ch_ntw

  assistant:
    build:
      context: assistant
      dockerfile: Dockerfile
    container_name: assistant
    depends_on:
      - ch_server
    networks:
      - ch_ntw
    volumes:
      - ./assistant:/app
    command: ["python", "Bot.py"]

networks:
  ch_ntw:
    driver: bridge
    ipam:
      config:
        - subnet: 10.222.1.0/24

volumes:
  postgres_storage:
  frontend_volume:
